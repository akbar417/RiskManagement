// Imports
 const cds = require("@sap/cds");

 /**
    * The service implementation with all service handlers
    */
 module.exports = cds.service.impl(async function () {
    // Define constants for the Risk and BusinessPartners entities from the risk-service.cds file
    const { Risks, BusinessPartners } = this.entities;

    /**
    * Set criticality after a READ operation on /risks
    */
     this.after("READ", Risks, (data) => {
        const risks = Array.isArray(data) ? data : [data];
        console.log("Inside after read Risks");
        risks.forEach((risk) => {
          if (risk.impact >= 100000) {
            risk.criticality = 1;
          } else { 
            risk.criticality = 2;
          }
       });
    });

    // connect to remote service
30    const BPsrv = await cds.connect.to("API_BUSINESS_PARTNER");
31   
32    /**
33     * Event-handler for read-events on the BusinessPartners entity.
34     * Each request to the API Business Hub requires the apikey in the header.
35     */
36    this.on("READ", BusinessPartners, async (req) => { 
37      // The API Sandbox returns alot of business partners with empty names.
38      // We don't want them in our application
39      req.query.where("LastName <> '' and FirstName <> '' ");
40   
41      return await BPsrv.transaction(req).send({
42        query: req.query,
43        headers: {
44          apikey: process.env.apikey,
45        },
46      });
47    });
 });